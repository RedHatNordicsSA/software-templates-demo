apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-web-template
  title: Quarkus Service with ArgoCD and a Tekton Pipeline
  description: Create a simple microservice using Quarkus with ArgoCD and a Tekton Pipeline
  tags:
    - recommended
    - java
    - quarkus
    - maven
spec:
  owner: cool-lab
  type: service
  parameters:
    - title: Provide Information for Application
      required:
        - component_id
        - java_package_name
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: my-quarkus-app
          ui:field: EntityNamePicker
          maxLength: 14
        group_id:
          title: Group Id
          type: string
          default: redhat.janus
          description: Maven Group Id
        artifact_id:
          title: Artifact Id
          type: string
          default: quarkus-app
          description: Maven Artifact Id
        java_package_name:
          title: Java Package Name
          default: org.redhat.janus
          type: string
          description: Name for the java package. eg (com.redhat.blah)
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: A cool quarkus app
        #added from the other template
        owner:
          title: Owner
#          default: 'user:earvonen'
          type: string
          description: IdP owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Provide Image Registry Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          enum:
            - Openshift
#            - Quay
      dependencies:
        image_registry:
          oneOf:
            - properties:
                image_registry:
                  enum:
                    - Openshift
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: image-registry.openshift-image-registry.svc:5000
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
#            - properties:
#                image_registry:
#                  enum:
#                    - Quay
#                image_host:
#                  title: Image Host
#                  type: string
#                  description: Host for storing image
#                  default: quay-s8zvl.apps.cluster-s8zvl.sandbox2674.opentlc.com
#                image_organization:
#                  title: Organization
#                  type: string
#                  description: Name of the Quay Organization
#                  default: quayadmin
#                image_tag:
#                  title: Image Tag
#                  default: latest
#                  type: string
#                  description: Build Image tag

#    - title: Application repository Information
#      required:
#        - repo
#      properties:
#        repo:
#          title: Repository Location
#          type: object
#          properties:
#            host:
#              title: Repo Host
#              type: string
#              description: Your SCM host
#              default: github.com
#              enum:
#                - github.com
#            owner:
#              title: Repo Owner
#              type: string
#              description: Your SCM host organization/group
#              default: RedHatNordicsSA
#              enum:
#                - RedHatNordicsSA

    - title: Application repository Information
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - RedHatNordicsSA

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.component_id }}-dev
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}
#          owner: ${{ user.entity.metadata.name }}
          owner: ${{ parameters.owner }}
          cluster: .apps.rh-ocp-01.cool.lab
          host: ${{ (parameters.repoUrl | parseRepoUrl).host }}
#          destination: ${{ parameters.repo.owner }}/${{ parameters.component_id }}
          destination: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.component_id }}
          port: 8080

#    - id: publish
#      name: Publish
#      action: publish:gitlab
#      input:
#        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}"
#        repoVisibility: public
        
    - id: publish
      name: Publishing to Source Code Repository
      action: publish:github
      input:
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
#          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}-gitops.git
          destination: https://github.com/${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}-gitops
#          source_repository: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}.git
          source_repository: https://github.com/${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          #repository_name: ${{parameters.component_id}}
          repository_name: ${{ (parameters.repoUrl | parseRepoUrl).repo }}
#          git_owner: ${{ parameters.repo.owner }}
          git_owner: ${{ (parameters.repoUrl | parseRepoUrl).owner }}
          cluster: .apps.rh-ocp-01.cool.lab
          namespace: ${{ parameters.component_id }}-dev
          image_registry: ${{ parameters.image_registry }}
          image_host: ${{ parameters.image_host }}
          image_organization: ${{ parameters.image_organization }}
          image_name: ${{ parameters.component_id }}
          image_tag: ${{ parameters.image_tag }}
          port: 8080
          repository_host: ${{ parameters.repoUrl }}
          deployment_name: quarkus-template
        targetPath: ./tenant-gitops

#    - id: publish-gitops
#      name: Publishing to Resource Repository
#      action: publish:gitlab
#      input:
#        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}-gitops"
#        title: gitops resources for ${{ parameters.component_id }}
#        description: gitops resources for ${{ parameters.component_id }}
#        sourcePath: ./tenant-gitops
#        repoVisibility: public

    - id: publish-gitops
      name: Publishing to Resource Repository
      action: publish:github
      input:
        repoUrl: github.com?repo=${{ (parameters.repoUrl | parseRepoUrl).repo }}-gitops&owner=${{ (parameters.repoUrl | parseRepoUrl).owner }}
        title: gitops resources for ${{ parameters.component_id }}
        description: gitops resources for ${{ parameters.component_id }}
        sourcePath: ./tenant-gitops
        repoVisibility: public

#    - id: create-argocd-resources
#      name: Create ArgoCD Resources
#      action: argocd:create-resources
#      input:
#        appName: ${{ parameters.component_id }}-bootstrap
#        argoInstance: main
#        namespace: janus-argocd
#        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.component_id }}-gitops.git
#        path: 'argocd/'

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
